{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Desktop\\\\pi\\\\PI_Countries\\\\client\\\\src\\\\Components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, orderByName, orderByPopulation } from \"../../Redux/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport style from \"./Cards.module.css\";\nimport Card from \"../Card/Card\";\nimport Loader from \"../Loader/Loader\";\nimport Paginate from \"../Paginate/Paginate\";\nimport { UPWARD, FALLING, MAX_POPULATION, MIN_POPULATION, ALL, ALL_OF_AFRICA, ALL_OF_N_AMERICA, ALL_OF_S_AMERICA, ALL_OF_ANTARCTICA, ALL_OF_ASIA, ALL_OF_EUROPE, ALL_OF_OCEANIA } from \"../../Const/Const\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries); //mapStateToProps.\n  console.log(countries.length);\n\n  //Paginate\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage] = useState(10);\n  const lastCountry = currentPage * countriesPerPage;\n  const firstCountry = lastCountry - countriesPerPage;\n  const currentCountry = countries.slice(firstCountry, lastCountry);\n  const [, setOrder] = useState(\"\"); //state of ordenamient (name, population)\n\n  const paginated = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  //Order by Name\n\n  function nameSort(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value));\n    setCurrentPage(1);\n    setOrder(`Ordering ${e.target.value}`);\n  }\n\n  //Order by population\n  function populationSort(e) {\n    e.preventDefault();\n    dispatch(orderByPopulation(e.target.value));\n    setCurrentPage(1);\n    setOrder(`Ordering ${e.target.value}`);\n  }\n\n  //useEffect to dispatch actions\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          nameSort(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: UPWARD,\n          children: \" A-Z \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: FALLING,\n          children: \" Z-A \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          populationSort(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: MAX_POPULATION,\n          children: \"Max population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: MIN_POPULATION,\n          children: \"Min population\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.containerCards,\n      children: currentCountry.length !== 0 ? currentCountry === null || currentCountry === void 0 ? void 0 : currentCountry.map(country => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.containeCardsDiv,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/\" + country.id,\n            className: style.Linkdecoration,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: country.name,\n              flag: country.flag,\n              continent: country.continent,\n              capital: country.capital,\n              population: country.population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, country.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.container,\n      children: /*#__PURE__*/_jsxDEV(Paginate, {\n        countriesPerPage: countriesPerPage,\n        countries: countries.length,\n        paginated: paginated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"v8xoy66XKSFJtQqANT4gCIKvXMA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getCountries","orderByName","orderByPopulation","Link","style","Card","Loader","Paginate","UPWARD","FALLING","MAX_POPULATION","MIN_POPULATION","ALL","ALL_OF_AFRICA","ALL_OF_N_AMERICA","ALL_OF_S_AMERICA","ALL_OF_ANTARCTICA","ALL_OF_ASIA","ALL_OF_EUROPE","ALL_OF_OCEANIA","Cards","dispatch","countries","state","console","log","length","currentPage","setCurrentPage","countriesPerPage","lastCountry","firstCountry","currentCountry","slice","setOrder","paginated","pageNumber","nameSort","e","preventDefault","target","value","populationSort","containerCards","map","country","containeCardsDiv","id","Linkdecoration","name","flag","continent","capital","population","container"],"sources":["C:/Users/Nico/Desktop/pi/PI_Countries/client/src/Components/Cards/Cards.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountries, orderByName , orderByPopulation} from \"../../Redux/actions/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"./Cards.module.css\";\r\nimport Card from \"../Card/Card\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Paginate from \"../Paginate/Paginate\";\r\nimport {\r\n  UPWARD,FALLING,MAX_POPULATION,MIN_POPULATION, ALL, ALL_OF_AFRICA, ALL_OF_N_AMERICA, ALL_OF_S_AMERICA, ALL_OF_ANTARCTICA, ALL_OF_ASIA, ALL_OF_EUROPE, ALL_OF_OCEANIA\r\n} from \"../../Const/Const\";\r\n\r\nexport default function Cards() {\r\n  const dispatch = useDispatch();\r\n  \r\n  const countries = useSelector((state) => state.countries); //mapStateToProps.\r\n  console.log(countries.length);\r\n  \r\n  //Paginate\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [countriesPerPage] = useState(10);\r\n  const lastCountry = currentPage * countriesPerPage;\r\n  const firstCountry = lastCountry - countriesPerPage;\r\n  const currentCountry = countries.slice(firstCountry, lastCountry);\r\n  const [, setOrder] = useState(\"\"); //state of ordenamient (name, population)\r\n\r\n\r\n  \r\n  const paginated = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  //Order by Name\r\n\r\n  function nameSort(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrder(`Ordering ${e.target.value}`);\r\n  }\r\n\r\n  //Order by population\r\n  function populationSort(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByPopulation(e.target.value));\r\n    setCurrentPage(1);\r\n    setOrder(`Ordering ${e.target.value}`);\r\n  }\r\n\r\n\r\n  //useEffect to dispatch actions\r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n\r\n        <select\r\n          onChange={(e) => {\r\n            nameSort(e);\r\n          }}\r\n        >\r\n          <option value={UPWARD}> A-Z </option>\r\n          <option value={FALLING}> Z-A </option>\r\n        </select>\r\n\r\n\r\n        <select\r\n          onChange={(e) => {\r\n            populationSort(e);\r\n          }}\r\n        >\r\n          <option value={MAX_POPULATION}>Max population</option>\r\n          <option value={MIN_POPULATION}>Min population</option>\r\n        </select>\r\n\r\n      </div>\r\n\r\n\r\n      <div className={style.containerCards}>\r\n        {currentCountry.length !== 0 ? (\r\n          currentCountry?.map((country) => {\r\n            return (\r\n              <div className={style.containeCardsDiv} key={country.id}>\r\n                <Link\r\n                  to={\"/home/\" + country.id}\r\n                  className={style.Linkdecoration}\r\n                >\r\n                  <Card\r\n                    name={country.name}\r\n                    flag={country.flag}\r\n                    continent={country.continent}\r\n                    capital={country.capital}\r\n                    population={country.population}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n      <div className={style.container}>\r\n        <Paginate\r\n          countriesPerPage={countriesPerPage}\r\n          countries={countries.length}\r\n          paginated={paginated}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,EAAEC,WAAW,EAAGC,iBAAiB,QAAO,2BAA2B;AACxF,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SACEC,MAAM,EAACC,OAAO,EAACC,cAAc,EAACC,cAAc,EAAEC,GAAG,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,aAAa,EAAEC,cAAc,QAC9J,mBAAmB;AAAC;AAE3B,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B,MAAMC,QAAQ,GAAGvB,WAAW,EAAE;EAE9B,MAAMwB,SAAS,GAAGvB,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC,CAAC,CAAC;EAC3DE,OAAO,CAACC,GAAG,CAACH,SAAS,CAACI,MAAM,CAAC;;EAE7B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAMiC,WAAW,GAAGH,WAAW,GAAGE,gBAAgB;EAClD,MAAME,YAAY,GAAGD,WAAW,GAAGD,gBAAgB;EACnD,MAAMG,cAAc,GAAGV,SAAS,CAACW,KAAK,CAACF,YAAY,EAAED,WAAW,CAAC;EACjE,MAAM,GAAGI,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAInC,MAAMsC,SAAS,GAAIC,UAAU,IAAK;IAChCR,cAAc,CAACQ,UAAU,CAAC;EAC5B,CAAC;;EAED;;EAEA,SAASC,QAAQ,CAACC,CAAC,EAAE;IACnBA,CAAC,CAACC,cAAc,EAAE;IAClBlB,QAAQ,CAACpB,WAAW,CAACqC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IACrCb,cAAc,CAAC,CAAC,CAAC;IACjBM,QAAQ,CAAE,YAAWI,CAAC,CAACE,MAAM,CAACC,KAAM,EAAC,CAAC;EACxC;;EAEA;EACA,SAASC,cAAc,CAACJ,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClBlB,QAAQ,CAACnB,iBAAiB,CAACoC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IAC3Cb,cAAc,CAAC,CAAC,CAAC;IACjBM,QAAQ,CAAE,YAAWI,CAAC,CAACE,MAAM,CAACC,KAAM,EAAC,CAAC;EACxC;;EAGA;EACA7C,SAAS,CAAC,MAAM;IACdyB,QAAQ,CAACrB,YAAY,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACqB,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,wBACE;MAAA,wBAEE;QACE,QAAQ,EAAGiB,CAAC,IAAK;UACfD,QAAQ,CAACC,CAAC,CAAC;QACb,CAAE;QAAA,wBAEF;UAAQ,KAAK,EAAE9B,MAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACrC;UAAQ,KAAK,EAAEC,OAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/B,eAGT;QACE,QAAQ,EAAG6B,CAAC,IAAK;UACfI,cAAc,CAACJ,CAAC,CAAC;QACnB,CAAE;QAAA,wBAEF;UAAQ,KAAK,EAAE5B,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACtD;UAAQ,KAAK,EAAEC,cAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eAGN;MAAK,SAAS,EAAEP,KAAK,CAACuC,cAAe;MAAA,UAClCX,cAAc,CAACN,MAAM,KAAK,CAAC,GAC1BM,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEY,GAAG,CAAEC,OAAO,IAAK;QAC/B,oBACE;UAAK,SAAS,EAAEzC,KAAK,CAAC0C,gBAAiB;UAAA,uBACrC,QAAC,IAAI;YACH,EAAE,EAAE,QAAQ,GAAGD,OAAO,CAACE,EAAG;YAC1B,SAAS,EAAE3C,KAAK,CAAC4C,cAAe;YAAA,uBAEhC,QAAC,IAAI;cACH,IAAI,EAAEH,OAAO,CAACI,IAAK;cACnB,IAAI,EAAEJ,OAAO,CAACK,IAAK;cACnB,SAAS,EAAEL,OAAO,CAACM,SAAU;cAC7B,OAAO,EAAEN,OAAO,CAACO,OAAQ;cACzB,UAAU,EAAEP,OAAO,CAACQ;YAAW;cAAA;cAAA;cAAA;YAAA;UAC/B;YAAA;YAAA;YAAA;UAAA;QACG,GAZoCR,OAAO,CAACE,EAAE;UAAA;UAAA;UAAA;QAAA,QAajD;MAEV,CAAC,CAAC,gBAEF,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAE3C,KAAK,CAACkD,SAAU;MAAA,uBAC9B,QAAC,QAAQ;QACP,gBAAgB,EAAEzB,gBAAiB;QACnC,SAAS,EAAEP,SAAS,CAACI,MAAO;QAC5B,SAAS,EAAES;MAAU;QAAA;QAAA;QAAA;MAAA;IACrB;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtGuBf,KAAK;EAAA,QACVtB,WAAW,EAEVC,WAAW;AAAA;AAAA,KAHPqB,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}