{"ast":null,"code":"import { GET_COUNTRIES, GET_DETAILS, GET_ACTIVITIES, POST_ACTIVITIES, SEARCH_COUNTRIES, ORDER_BY_NAME, UPWARD } from '../../Const/Const';\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  details: [],\n  activities: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case SEARCH_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case GET_DETAILS:\n      return {\n        ...state,\n        details: action.payload\n      };\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case ORDER_BY_NAME:\n      {\n        let orderByName = action.payload === UPWARD ? state.countries.sort((a, b) => {\n          if (a.name < b.name) {\n            return -1;\n          }\n          if (a.name > b.name) {\n            return 1;\n          }\n          return 0;\n        }) : state.countries.sort((a, b) => {\n          if (a.name < b.name) {\n            return 1;\n          }\n          if (a.name > b.name) {\n            return -1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          countries: orderByName\n        };\n      }\n    case POST_ACTIVITIES:\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_COUNTRIES","GET_DETAILS","GET_ACTIVITIES","POST_ACTIVITIES","SEARCH_COUNTRIES","ORDER_BY_NAME","UPWARD","initialState","countries","allCountries","details","activities","rootReducer","state","action","type","payload","orderByName","sort","a","b","name"],"sources":["C:/Users/Nico/Desktop/pi/PI_Countries/client/src/Redux/reducer/index.js"],"sourcesContent":["import { GET_COUNTRIES, GET_DETAILS, GET_ACTIVITIES, POST_ACTIVITIES, SEARCH_COUNTRIES, ORDER_BY_NAME, UPWARD } from '../../Const/Const'\r\n\r\n\r\nconst initialState = {\r\n  countries: [],\r\n  allCountries: [],\r\n  details: [],\r\n  activities: []\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case GET_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n        allCountries: action.payload\r\n      }\r\n\r\n    case SEARCH_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countries: action.payload\r\n      }\r\n\r\n    case GET_DETAILS:\r\n      return {\r\n        ...state,\r\n        details: action.payload\r\n      }\r\n\r\n    case GET_ACTIVITIES:\r\n      return {\r\n        ...state,\r\n        activities: action.payload\r\n      }\r\n\r\n    case ORDER_BY_NAME: {\r\n      let orderByName = action.payload === UPWARD ? state.countries.sort((a, b) => {\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      }) :\r\n        state.countries.sort((a, b) => {\r\n          if (a.name < b.name) {\r\n            return 1;\r\n          }\r\n          if (a.name > b.name) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        })\r\n        return {\r\n          ...state,\r\n          countries:orderByName\r\n        }\r\n    }\r\n\r\n    case POST_ACTIVITIES:\r\n      return {\r\n        ...state\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,MAAM,QAAQ,mBAAmB;AAGxI,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE;AACd,CAAC;AAED,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAE9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKf,aAAa;MAChB,OAAO;QACL,GAAGa,KAAK;QACRL,SAAS,EAAEM,MAAM,CAACE,OAAO;QACzBP,YAAY,EAAEK,MAAM,CAACE;MACvB,CAAC;IAEH,KAAKZ,gBAAgB;MACnB,OAAO;QACL,GAAGS,KAAK;QACRL,SAAS,EAAEM,MAAM,CAACE;MACpB,CAAC;IAEH,KAAKf,WAAW;MACd,OAAO;QACL,GAAGY,KAAK;QACRH,OAAO,EAAEI,MAAM,CAACE;MAClB,CAAC;IAEH,KAAKd,cAAc;MACjB,OAAO;QACL,GAAGW,KAAK;QACRF,UAAU,EAAEG,MAAM,CAACE;MACrB,CAAC;IAEH,KAAKX,aAAa;MAAE;QAClB,IAAIY,WAAW,GAAGH,MAAM,CAACE,OAAO,KAAKV,MAAM,GAAGO,KAAK,CAACL,SAAS,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC3E,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;YACnB,OAAO,CAAC,CAAC;UACX;UACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;YACnB,OAAO,CAAC;UACV;UACA,OAAO,CAAC;QACV,CAAC,CAAC,GACAR,KAAK,CAACL,SAAS,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC7B,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;YACnB,OAAO,CAAC;UACV;UACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;YACnB,OAAO,CAAC,CAAC;UACX;UACA,OAAO,CAAC;QACV,CAAC,CAAC;QACF,OAAO;UACL,GAAGR,KAAK;UACRL,SAAS,EAACS;QACZ,CAAC;MACL;IAEA,KAAKd,eAAe;MAClB,OAAO;QACL,GAAGU;MACL,CAAC;IAEH;MACE,OAAOA,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}