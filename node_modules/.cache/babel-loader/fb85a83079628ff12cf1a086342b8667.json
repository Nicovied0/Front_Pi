{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Desktop\\\\pi\\\\PI_Countries\\\\client\\\\src\\\\Components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCountries } from \"../../Redux/actions/index\";\nimport Card from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const dispatch = useDispatch();\n  const countries = useSelector(state => state.countries);\n  console.log(countries);\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countries === null || countries === void 0 ? void 0 : countries.map(country => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          name: country.name,\n          flag: country.flag,\n          continent: country.continent,\n          capital: country.capital,\n          population: country.population\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, country.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"R7NpiZ/RV9ftBFKTNxAFs1XCDj8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","getCountries","Card","Cards","dispatch","countries","state","console","log","map","country","name","flag","continent","capital","population","id"],"sources":["C:/Users/Nico/Desktop/pi/PI_Countries/client/src/Components/Cards/Cards.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCountries } from \"../../Redux/actions/index\";\r\nimport Card from \"../Card/Card\";\r\n\r\nexport default function Cards() {\r\n  const dispatch = useDispatch();\r\n\r\n  const countries = useSelector((state) => state.countries);\r\n  console.log(countries);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n      countries?.map((country) => {\r\n        return (\r\n          <div key={country.id}>\r\n            <Link>\r\n            </Link>\r\n            <Card\r\n              name={country.name}\r\n              flag={country.flag}\r\n              continent={country.continent}\r\n              capital={country.capital}\r\n              population={country.population}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,IAAI,MAAM,cAAc;AAAC;AAEhC,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAE9B,MAAMO,SAAS,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzDE,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtBR,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACH,YAAY,EAAE,CAAC;EAC1B,CAAC,EAAE,CAACG,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,UAEEC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,GAAG,CAAEC,OAAO,IAAK;MAC1B,oBACE;QAAA,wBACE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA,QACE,eACP,QAAC,IAAI;UACH,IAAI,EAAEA,OAAO,CAACC,IAAK;UACnB,IAAI,EAAED,OAAO,CAACE,IAAK;UACnB,SAAS,EAAEF,OAAO,CAACG,SAAU;UAC7B,OAAO,EAAEH,OAAO,CAACI,OAAQ;UACzB,UAAU,EAAEJ,OAAO,CAACK;QAAW;UAAA;UAAA;UAAA;QAAA,QAC/B;MAAA,GATML,OAAO,CAACM,EAAE;QAAA;QAAA;QAAA;MAAA,QAUd;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA9BuBb,KAAK;EAAA,QACVL,WAAW,EAEVC,WAAW;AAAA;AAAA,KAHPI,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}