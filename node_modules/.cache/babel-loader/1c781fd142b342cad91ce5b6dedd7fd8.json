{"ast":null,"code":"import axios from 'axios';\nimport { GET_ACTIVITIES, GET_COUNTRIES, GET_DETAILS, POST_ACTIVITIES, SEARCH_COUNTRIES, ORDER_BY_NAME, ORDER_BY_POPULATION, FILTER_BY_CONTINENT, FILTER_BY_ACTIVITIES } from '../../Const/Const';\nexport function getCountries() {\n  return async function (dispatch) {\n    try {\n      let json = await axios.get('http://localhost:3001/countries');\n      return dispatch({\n        type: GET_COUNTRIES,\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n      alert('Error, the app is not working. Please try again later.');\n    }\n  };\n}\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      let json = await axios.get('http://localhost:3001/countries/' + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: json.data\n      });\n    } catch {\n      console.log('Error in Details Country');\n      alert('Error, the app is not working. Please try again later.');\n    }\n  };\n}\nexport function getCountriesByName(search) {\n  return async function (dispatch) {\n    try {\n      let json = await axios.get('http://localhost:3001/countries?name=' + search);\n      return dispatch({\n        type: SEARCH_COUNTRIES,\n        payload: json.data\n      });\n    } catch {\n      alert(`No country was found that includes \"${search}\".`);\n    }\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n}\nexport function orderByPopulation(payload) {\n  return {\n    type: ORDER_BY_POPULATION,\n    payload\n  };\n}\nexport function filterByContinent(payload) {\n  return {\n    type: FILTER_BY_CONTINENT,\n    payload\n  };\n}\nexport function filterByActivity(payload) {\n  return {\n    type: FILTER_BY_ACTIVITIES,\n    payload\n  };\n}\nexport function getActivities() {\n  return async function (dispatch) {\n    try {\n      let json = await axios.get('http://localhost:3001/activities');\n      return dispatch({\n        type: GET_ACTIVITIES,\n        payload: json.data\n      });\n    } catch {\n      console.log('Error in get Activities');\n    }\n  };\n}\nexport function postActivities(payload) {\n  return async function (dispatch) {\n    try {\n      await axios.post('http://localhost:3001/activities/', payload);\n      return dispatch({\n        type: POST_ACTIVITIES\n      });\n    } catch {\n      console.log('Error in post activities');\n    }\n  };\n}","map":{"version":3,"names":["axios","GET_ACTIVITIES","GET_COUNTRIES","GET_DETAILS","POST_ACTIVITIES","SEARCH_COUNTRIES","ORDER_BY_NAME","ORDER_BY_POPULATION","FILTER_BY_CONTINENT","FILTER_BY_ACTIVITIES","getCountries","dispatch","json","get","type","payload","data","error","console","log","alert","getDetails","id","getCountriesByName","search","orderByName","orderByPopulation","filterByContinent","filterByActivity","getActivities","postActivities","post"],"sources":["C:/Users/Nico/Desktop/pi/PI_Countries/client/src/Redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { GET_ACTIVITIES, GET_COUNTRIES, GET_DETAILS, POST_ACTIVITIES, SEARCH_COUNTRIES, ORDER_BY_NAME, ORDER_BY_POPULATION, FILTER_BY_CONTINENT, FILTER_BY_ACTIVITIES } from '../../Const/Const'\r\n\r\n\r\nexport function getCountries() {\r\n    return async function (dispatch) {\r\n        try {\r\n            let json = await axios.get('http://localhost:3001/countries')\r\n            return dispatch({\r\n                type: GET_COUNTRIES,\r\n                payload: json.data\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n            alert('Error, the app is not working. Please try again later.')\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDetails(id) {\r\n    return async function (dispatch) {\r\n        try {\r\n            let json = await axios.get('http://localhost:3001/countries/' + id)\r\n            return dispatch({\r\n                type: GET_DETAILS,\r\n                payload: json.data\r\n            });\r\n\r\n        } catch {\r\n            console.log('Error in Details Country')\r\n            alert('Error, the app is not working. Please try again later.')\r\n        }\r\n    }\r\n}\r\n\r\nexport function getCountriesByName(search) {\r\n    return async function (dispatch) {\r\n        try {\r\n            let json = await axios.get('http://localhost:3001/countries?name=' + search)\r\n            return dispatch({\r\n                type: SEARCH_COUNTRIES,\r\n                payload: json.data\r\n            })\r\n        } catch {\r\n            alert(`No country was found that includes \"${search}\".`)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function orderByName(payload) {\r\n    return {\r\n        type: ORDER_BY_NAME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function orderByPopulation(payload) {\r\n    return {\r\n        type: ORDER_BY_POPULATION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function filterByContinent(payload) {\r\n    return {\r\n        type: FILTER_BY_CONTINENT,\r\n        payload\r\n    }\r\n}\r\nexport function filterByActivity(payload) {\r\n    return {\r\n        type: FILTER_BY_ACTIVITIES,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport function getActivities() {\r\n    return async function (dispatch) {\r\n        try {\r\n            let json = await axios.get('http://localhost:3001/activities')\r\n            return dispatch({\r\n                type: GET_ACTIVITIES,\r\n                payload: json.data\r\n            });\r\n\r\n        } catch {\r\n            console.log('Error in get Activities')\r\n        }\r\n    }\r\n}\r\n\r\nexport function postActivities(payload) {\r\n    return async function (dispatch) {\r\n        try {\r\n            await axios.post('http://localhost:3001/activities/', payload)\r\n            return dispatch({\r\n                type: POST_ACTIVITIES,\r\n            })\r\n\r\n        } catch {\r\n            console.log('Error in post activities')\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}